import { FilterConfig } from './filterConfig';
export function filter(targetOrNameOrConfig, key, descriptor) {
    const configurableDecorate = (target, key2, descriptor2) => {
        const actualTarget = key2 ? target.constructor : target;
        const config = {
            coerce: true,
            defaultValue: undefined,
            descriptor: undefined,
            emptyIsNull: false,
            ignoreOnAutoMap: false,
            parameterName: key2,
            parseFormatter: undefined,
            persisted: false,
            propertyName: key2,
            serializeFormatter: undefined
        };
        if (typeof targetOrNameOrConfig === 'string') {
            config.parameterName = targetOrNameOrConfig;
        }
        else {
            Object.assign(config, targetOrNameOrConfig);
        }
        return new FilterConfig(config).register(actualTarget, descriptor2);
    };
    if (key) {
        const targetTemp = targetOrNameOrConfig;
        targetOrNameOrConfig = null;
        return configurableDecorate(targetTemp, key, descriptor);
    }
    return configurableDecorate;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlckFubm90YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxnQkFBZ0I7QUFFM0MsdUJBQXVCLG9CQUFtRCxFQUFFLEdBQVksRUFBRSxVQUFtQjtJQUN6RyxNQUFNLG9CQUFvQixHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXO1FBQ25ELE1BQU0sWUFBWSxHQUFHLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUN4RCxNQUFNLE1BQU0sR0FBRztZQUNYLE1BQU0sRUFBRSxJQUFJO1lBQ1osWUFBWSxFQUFFLFNBQVM7WUFDdkIsVUFBVSxFQUFFLFNBQVM7WUFDckIsV0FBVyxFQUFFLEtBQUs7WUFDbEIsZUFBZSxFQUFFLEtBQUs7WUFDdEIsYUFBYSxFQUFFLElBQUk7WUFDbkIsY0FBYyxFQUFFLFNBQVM7WUFDekIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsWUFBWSxFQUFFLElBQUk7WUFDbEIsa0JBQWtCLEVBQUUsU0FBUztTQUNmLENBQUM7UUFFbkIsRUFBRSxDQUFDLENBQUMsT0FBTyxvQkFBb0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzNDLE1BQU0sQ0FBQyxhQUFhLEdBQUcsb0JBQW9CLENBQUM7UUFDaEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDeEUsQ0FBQyxDQUFDO0lBRUYsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNOLE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDO1FBQ3hDLG9CQUFvQixHQUFHLElBQUksQ0FBQztRQUM1QixNQUFNLENBQUMsb0JBQW9CLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBQ0QsTUFBTSxDQUFDLG9CQUFvQixDQUFDO0FBQ2hDLENBQUMiLCJmaWxlIjoiZmlsdGVyQW5ub3RhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlsdGVyQ29uZmlnfSBmcm9tICcuL2ZpbHRlckNvbmZpZyc7XHJcbmltcG9ydCB7SUZpbHRlckNvbmZpZ30gZnJvbSAnLi9jb250cmFjdHMvSUZpbHRlckNvbmZpZyc7XHJcbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXIodGFyZ2V0T3JOYW1lT3JDb25maWc/OiBzdHJpbmcgfCBJRmlsdGVyQ29uZmlnIHwgYW55LCBrZXk/OiBzdHJpbmcsIGRlc2NyaXB0b3I/OiBPYmplY3QpOiBhbnkge1xyXG4gICAgY29uc3QgY29uZmlndXJhYmxlRGVjb3JhdGUgPSAodGFyZ2V0LCBrZXkyLCBkZXNjcmlwdG9yMikgPT4ge1xyXG4gICAgICAgIGNvbnN0IGFjdHVhbFRhcmdldCA9IGtleTIgPyB0YXJnZXQuY29uc3RydWN0b3IgOiB0YXJnZXQ7XHJcbiAgICAgICAgY29uc3QgY29uZmlnID0ge1xyXG4gICAgICAgICAgICBjb2VyY2U6IHRydWUsXHJcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICBkZXNjcmlwdG9yOiB1bmRlZmluZWQsXHJcbiAgICAgICAgICAgIGVtcHR5SXNOdWxsOiBmYWxzZSxcclxuICAgICAgICAgICAgaWdub3JlT25BdXRvTWFwOiBmYWxzZSxcclxuICAgICAgICAgICAgcGFyYW1ldGVyTmFtZToga2V5MixcclxuICAgICAgICAgICAgcGFyc2VGb3JtYXR0ZXI6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgcGVyc2lzdGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgcHJvcGVydHlOYW1lOiBrZXkyLFxyXG4gICAgICAgICAgICBzZXJpYWxpemVGb3JtYXR0ZXI6IHVuZGVmaW5lZFxyXG4gICAgICAgIH0gYXMgSUZpbHRlckNvbmZpZztcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRPck5hbWVPckNvbmZpZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgY29uZmlnLnBhcmFtZXRlck5hbWUgPSB0YXJnZXRPck5hbWVPckNvbmZpZztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKGNvbmZpZywgdGFyZ2V0T3JOYW1lT3JDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbmV3IEZpbHRlckNvbmZpZyhjb25maWcpLnJlZ2lzdGVyKGFjdHVhbFRhcmdldCwgZGVzY3JpcHRvcjIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoa2V5KSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0VGVtcCA9IHRhcmdldE9yTmFtZU9yQ29uZmlnO1xyXG4gICAgICAgIHRhcmdldE9yTmFtZU9yQ29uZmlnID0gbnVsbDtcclxuICAgICAgICByZXR1cm4gY29uZmlndXJhYmxlRGVjb3JhdGUodGFyZ2V0VGVtcCwga2V5LCBkZXNjcmlwdG9yKTtcclxuICAgIH1cclxuICAgIHJldHVybiBjb25maWd1cmFibGVEZWNvcmF0ZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
