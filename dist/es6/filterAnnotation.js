import { FilterConfig } from './filterConfig';
export function filter(targetOrNameOrConfig, key) {
    console.log(targetOrNameOrConfig);
    console.log(key);
    const configurableDecorate = (target, key2) => {
        const actualTarget = key2 ? target.constructor : target;
        const config = FilterConfig.getDefaultConfig(key2);
        if (typeof targetOrNameOrConfig === 'string') {
            config.parameterName = targetOrNameOrConfig;
        }
        else {
            Object.assign(config, targetOrNameOrConfig);
        }
        return new FilterConfig(config).register(actualTarget);
    };
    if (key) {
        const targetTemp = targetOrNameOrConfig;
        targetOrNameOrConfig = null;
        return configurableDecorate(targetTemp, key);
    }
    return configurableDecorate;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlckFubm90YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxnQkFBZ0I7QUFFM0MsdUJBQXVCLG9CQUFtRCxFQUFFLEdBQVk7SUFDcEYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFakIsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJO1FBQ3RDLE1BQU0sWUFBWSxHQUFHLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUN4RCxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkQsRUFBRSxDQUFDLENBQUMsT0FBTyxvQkFBb0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzNDLE1BQU0sQ0FBQyxhQUFhLEdBQUcsb0JBQW9CLENBQUM7UUFDaEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMzRCxDQUFDLENBQUM7SUFFRixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ04sTUFBTSxVQUFVLEdBQUcsb0JBQW9CLENBQUM7UUFDeEMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUNELE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztBQUNoQyxDQUFDIiwiZmlsZSI6ImZpbHRlckFubm90YXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZpbHRlckNvbmZpZ30gZnJvbSAnLi9maWx0ZXJDb25maWcnO1xyXG5pbXBvcnQge0lGaWx0ZXJDb25maWd9IGZyb20gJy4vY29udHJhY3RzL0lGaWx0ZXJDb25maWcnO1xyXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyKHRhcmdldE9yTmFtZU9yQ29uZmlnPzogc3RyaW5nIHwgSUZpbHRlckNvbmZpZyB8IGFueSwga2V5Pzogc3RyaW5nKTogYW55IHtcclxuICAgIGNvbnNvbGUubG9nKHRhcmdldE9yTmFtZU9yQ29uZmlnKTtcclxuICAgIGNvbnNvbGUubG9nKGtleSk7XHJcblxyXG4gICAgY29uc3QgY29uZmlndXJhYmxlRGVjb3JhdGUgPSAodGFyZ2V0LCBrZXkyKSA9PiB7XHJcbiAgICAgICAgY29uc3QgYWN0dWFsVGFyZ2V0ID0ga2V5MiA/IHRhcmdldC5jb25zdHJ1Y3RvciA6IHRhcmdldDtcclxuICAgICAgICBjb25zdCBjb25maWcgPSBGaWx0ZXJDb25maWcuZ2V0RGVmYXVsdENvbmZpZyhrZXkyKTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRPck5hbWVPckNvbmZpZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgY29uZmlnLnBhcmFtZXRlck5hbWUgPSB0YXJnZXRPck5hbWVPckNvbmZpZztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKGNvbmZpZywgdGFyZ2V0T3JOYW1lT3JDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbmV3IEZpbHRlckNvbmZpZyhjb25maWcpLnJlZ2lzdGVyKGFjdHVhbFRhcmdldCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChrZXkpIHtcclxuICAgICAgICBjb25zdCB0YXJnZXRUZW1wID0gdGFyZ2V0T3JOYW1lT3JDb25maWc7XHJcbiAgICAgICAgdGFyZ2V0T3JOYW1lT3JDb25maWcgPSBudWxsO1xyXG4gICAgICAgIHJldHVybiBjb25maWd1cmFibGVEZWNvcmF0ZSh0YXJnZXRUZW1wLCBrZXkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbmZpZ3VyYWJsZURlY29yYXRlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
